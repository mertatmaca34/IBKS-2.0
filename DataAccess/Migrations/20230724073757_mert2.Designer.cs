// <auto-generated />
using System;
using DataAccess.Concrete.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(IBKSContext))]
    [Migration("20230724073757_mert2")]
    partial class mert2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Concrete.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");
                });

            modelBuilder.Entity("Core.Entities.Concrete.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserOperationClaims");
                });

            modelBuilder.Entity("Entities.Concrete.Api", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApiAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Apis");
                });

            modelBuilder.Entity("Entities.Concrete.Calibration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsItValid")
                        .HasColumnType("bit");

                    b.Property<string>("Parameter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ResultFactor")
                        .HasColumnType("float");

                    b.Property<double>("SpanDiff")
                        .HasColumnType("float");

                    b.Property<double>("SpanMeas")
                        .HasColumnType("float");

                    b.Property<double>("SpanRef")
                        .HasColumnType("float");

                    b.Property<double>("SpanStd")
                        .HasColumnType("float");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("ZeroDiff")
                        .HasColumnType("float");

                    b.Property<double>("ZeroMeas")
                        .HasColumnType("float");

                    b.Property<double>("ZeroRef")
                        .HasColumnType("float");

                    b.Property<double>("ZeroStd")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Calibrations");
                });

            modelBuilder.Entity("Entities.Concrete.CalibrationLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Parameter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpanRef")
                        .HasColumnType("int");

                    b.Property<int>("SpanTimeStamp")
                        .HasColumnType("int");

                    b.Property<int>("ZeroRef")
                        .HasColumnType("int");

                    b.Property<int>("ZeroTimeStamp")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CalibrationLimits");
                });

            modelBuilder.Entity("Entities.Concrete.Channel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DesarjDebiRead")
                        .HasColumnType("bit");

                    b.Property<bool>("DesarjDebiSend")
                        .HasColumnType("bit");

                    b.Property<bool>("HariciDebi2Read")
                        .HasColumnType("bit");

                    b.Property<bool>("HariciDebi2Send")
                        .HasColumnType("bit");

                    b.Property<bool>("HariciDebiRead")
                        .HasColumnType("bit");

                    b.Property<bool>("HariciDebiSend")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Entities.Concrete.DB12", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("GunlukYikamaDakika")
                        .HasColumnType("tinyint");

                    b.Property<byte>("GunlukYikamaSaat")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HaftaGunu")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HaftaGunuDakika")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HaftaGunuSaat")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("DB12s");
                });

            modelBuilder.Entity("Entities.Concrete.DB4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("SystemTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DB4s");
                });

            modelBuilder.Entity("Entities.Concrete.DB41", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Akm")
                        .HasColumnType("float");

                    b.Property<double>("CozunmusOksijen")
                        .HasColumnType("float");

                    b.Property<double>("DesarjDebi")
                        .HasColumnType("float");

                    b.Property<double>("HariciDebi")
                        .HasColumnType("float");

                    b.Property<double>("HariciDebi2")
                        .HasColumnType("float");

                    b.Property<double>("Iletkenlik")
                        .HasColumnType("float");

                    b.Property<double>("KabinNem")
                        .HasColumnType("float");

                    b.Property<double>("KabinSicaklik")
                        .HasColumnType("float");

                    b.Property<double>("Koi")
                        .HasColumnType("float");

                    b.Property<double>("NumuneDebi")
                        .HasColumnType("float");

                    b.Property<double>("NumuneHiz")
                        .HasColumnType("float");

                    b.Property<double>("NumuneSicaklik")
                        .HasColumnType("float");

                    b.Property<double>("Ph")
                        .HasColumnType("float");

                    b.Property<double>("Pompa1Hz")
                        .HasColumnType("float");

                    b.Property<double>("Pompa2Hz")
                        .HasColumnType("float");

                    b.Property<double>("TesisDebi")
                        .HasColumnType("float");

                    b.Property<double>("TesisGünlükDebi")
                        .HasColumnType("float");

                    b.Property<double>("UpsCikisVolt")
                        .HasColumnType("float");

                    b.Property<double>("UpsGirisVolt")
                        .HasColumnType("float");

                    b.Property<double>("UpsKapasite")
                        .HasColumnType("float");

                    b.Property<double>("UpsSicaklik")
                        .HasColumnType("float");

                    b.Property<double>("UpsYuk")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DB41s");
                });

            modelBuilder.Entity("Entities.Concrete.InputTags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AcilStop")
                        .HasColumnType("bit");

                    b.Property<bool>("Duman")
                        .HasColumnType("bit");

                    b.Property<bool>("Enerji")
                        .HasColumnType("bit");

                    b.Property<bool>("Kapi")
                        .HasColumnType("bit");

                    b.Property<bool>("Pompa1CalisiyorMu")
                        .HasColumnType("bit");

                    b.Property<bool>("Pompa1Termik")
                        .HasColumnType("bit");

                    b.Property<bool>("Pompa2CalisiyorMu")
                        .HasColumnType("bit");

                    b.Property<bool>("Pompa2Termik")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReadTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SuBaskini")
                        .HasColumnType("bit");

                    b.Property<bool>("TemizSuTermik")
                        .HasColumnType("bit");

                    b.Property<bool>("YikamaTanki")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("InputTags");
                });

            modelBuilder.Entity("Entities.Concrete.MBTags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AkmTetik")
                        .HasColumnType("bit");

                    b.Property<bool>("HaftalikYikamaVarMi")
                        .HasColumnType("bit");

                    b.Property<bool>("KoiTetik")
                        .HasColumnType("bit");

                    b.Property<bool>("ModAutoMu")
                        .HasColumnType("bit");

                    b.Property<bool>("ModBakimMi")
                        .HasColumnType("bit");

                    b.Property<bool>("ModKalibrasyonMu")
                        .HasColumnType("bit");

                    b.Property<bool>("PhTetik")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReadTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("YikamaVarMi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MBTags");
                });

            modelBuilder.Entity("Entities.Concrete.MailServer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<bool>("UseDefaultCredentials")
                        .HasColumnType("bit");

                    b.Property<bool>("UseSSL")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MailServers");
                });

            modelBuilder.Entity("Entities.Concrete.MailStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("CoolDown")
                        .HasColumnType("time");

                    b.Property<double?>("LowerLimit")
                        .HasColumnType("float");

                    b.Property<string>("Parameter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatementName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("UpperLimit")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MailStatements");
                });

            modelBuilder.Entity("Entities.Concrete.Plc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IpAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plcs");
                });

            modelBuilder.Entity("Entities.Concrete.Sample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfDelivery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SampleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SampleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sampler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Samples");
                });

            modelBuilder.Entity("Entities.Concrete.SendData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AKM")
                        .HasColumnType("float");

                    b.Property<int>("AKM_Status")
                        .HasColumnType("int");

                    b.Property<double>("AkisHizi")
                        .HasColumnType("float");

                    b.Property<int>("AkisHizi_Status")
                        .HasColumnType("int");

                    b.Property<double>("CozunmusOksijen")
                        .HasColumnType("float");

                    b.Property<int>("CozunmusOksijen_Status")
                        .HasColumnType("int");

                    b.Property<double>("Debi")
                        .HasColumnType("float");

                    b.Property<int>("Debi_Status")
                        .HasColumnType("int");

                    b.Property<double>("DesarjDebi")
                        .HasColumnType("float");

                    b.Property<int>("DesarjDebi_Status")
                        .HasColumnType("int");

                    b.Property<double>("HariciDebi")
                        .HasColumnType("float");

                    b.Property<double>("HariciDebi2")
                        .HasColumnType("float");

                    b.Property<int>("HariciDebi2_Status")
                        .HasColumnType("int");

                    b.Property<int>("HariciDebi_Status")
                        .HasColumnType("int");

                    b.Property<double>("Iletkenlik")
                        .HasColumnType("float");

                    b.Property<int>("Iletkenlik_Status")
                        .HasColumnType("int");

                    b.Property<double>("KOi")
                        .HasColumnType("float");

                    b.Property<int>("KOi_Status")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<DateTime>("Readtime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Sicaklik")
                        .HasColumnType("float");

                    b.Property<int>("Sicaklik_Status")
                        .HasColumnType("int");

                    b.Property<string>("SoftwareVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Stationid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("pH")
                        .HasColumnType("float");

                    b.Property<int>("pH_Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SendDatas");
                });

            modelBuilder.Entity("Entities.Concrete.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("StationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stations");
                });
#pragma warning restore 612, 618
        }
    }
}
